#!/bin/bash

# The Unicode Block Elements#{{{
# | Unicode | Block |           Name             |    Note    |
# |:-------:|:-----:|:--------------------------:|:----------:|
# |  2580   |  ‚ñÄ    | UPPER HALF BLOCK           |            |
# |  2581   |  ‚ñÅ    | LOWER ONE EIGHTH BLOCK     |            |
# |  2582   |  ‚ñÇ    | LOWER ONE QUARTER BLOCK    |            |
# |  2583   |  ‚ñÉ    | LOWER THREE EIGHTHS BLOCK  |            |
# |  2584   |  ‚ñÑ    | LOWER HALF BLOCK           |            |
# |  2585   |  ‚ñÖ    | LOWER FIVE EIGHTHS BLOCK   |            |
# |  2586   |  ‚ñÜ    | LOWER THREE QUARTERS BLOCK |            |
# |  2587   |  ‚ñá    | LOWER SEVEN EIGHTHS BLOCK  |            |
# |  2588   |  ‚ñà    | FULL BLOCK                 | ‚Üí25A0(‚ñ†)   |
# |  2589   |  ‚ñâ    | LEFT SEVEN EIGHTHS BLOCK   |            |
# |  258A   |  ‚ñä    | LEFT THREE QUARTERS BLOCK  |            |
# |  258B   |  ‚ñã    | LEFT FIVE EIGHTHS BLOCK    |            |
# |  258C   |  ‚ñå    | LEFT HALF BLOCK            |            |
# |  258D   |  ‚ñç    | LEFT THREE EIGHTHS BLOCK   |            |
# |  258E   |  ‚ñé    | LEFT ONE QUARTER BLOCK     |            |
# |  258F   |  ‚ñè    | LEFT ONE EIGHTH BLOCK      |            |
# |  2590   |  ‚ñê    | RIGHT HALF BLOCK           |            |
#
# signals=(‚ñÇ ‚ñÖ ‚ñá)
#}}}

# airport command#{{{
#
# Usage:
#   Search information about Wi-Fi by using airport command
#   airport command has this options
#    -c[<arg>] --channel=[<arg>]    Set arbitrary channel on the card
#    -z        --disassociate       Disassociate from any network
#    -I        --getinfo            Print current wireless status, e.g. signal info, BSSID, port type etc.
#    -s[<arg>] --scan=[<arg>]       Perform a wireless broadcast scan.
#                                      Will perform a directed scan if the optional <arg> is provided
#    -x        --xml                Print info as XML
#    -P        --psk                Create PSK from specified pass phrase and SSID.
#                                      The following additional arguments must be specified with this command:
#                                     --password=<arg>  Specify a WPA password
#                                     --ssid=<arg>      Specify SSID when creating a PSK
#    -h        --help               Show this help
##}}}
airport_path="/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport"

# Check if airport is available
if [[ ! -x $airport_path ]]; then
  exit 1
fi

# Get the wifi information and then set it to an info array
INFO=($( eval "$airport_path" --getinfo | grep -E "^ *(agrCtlRSSI|state|lastTxRate|SSID):" | awk '{print $2}'))
if [[ ${#INFO[@]} -eq 0 ]]; then
  exit 1
fi

# cut out a needed information from the info
# reference: http://osxdaily.com/2007/01/18/airport-the-little-known-command-line-wireless-utility/
rssi="${INFO[0]}"   # strength of wifi wave
stat="${INFO[1]}"   # whether wifi is available
rate="${INFO[2]}"   # bandwidth of wifi wave
ssid="${INFO[3]}"   # wifi ssid name

# If the wifi rate (wifi bandwidth) is unavailable,
if [ "$rate" = 0 ]; then
  exit 1
fi

ipaddress=$( \
  ifconfig \
  | grep inet[^6] \
  | sed 's/.*inet[^6][^0-9]*\([0-9.]*\)[^0-9]*.*/\1/' \
  | grep -v '0\.[01]$' \
  )

icon=üì°

DISPLAY=""

if [ "$OPTIND" = 1 ]; then
  while getopts :hirsaf: OPT
  do
    case $OPT in
      h)
        ;;
      i)
        DISPLAY="${ssid}"
        ;;
      r)
        DISPLAY="${rate} Mbps"
        ;;
      a)
        DISPLAY="${ipaddress}"
        ;;
      f)
        DISPLAY=$( \
          echo ${OPTARG} \
          | sed -e "s/%ssid/${ssid}/g" \
          | sed -e "s/%rate/${rate} Mbps/g" \
          | sed -e "s/%ipaddress/${ipaddress}/g" \
          | sed -e "s/%icon/${icon}/g" \
          )
        ;;
      *)
        ;;
    esac
  done
fi

echo $DISPLAY

