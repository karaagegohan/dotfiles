#! /bin/bash

function usage() {
Usage:
  $(basename $0) [-a] [-b]

Description:
  Get information about the music playing now.

Options:
  -a    artist
  -t    title
_EOT_
exit 1
}

function title() {
  echo $(osascript -e 'tell application "iTunes" to if player state is playing then name of current track')
}

function artist() {
  echo $(osascript -e 'tell application "iTunes" to if player state is playing then artist of current track')
}

function position() {
  current_time=$( \
  osascript -e 'tell application "iTunes" to if player state is playing then player position' \
  | grep -oE "[0-9]*" \
  )
  total_time=$( \
  osascript -e 'tell application "iTunes" to if player state is playing then time of current track' \
  | awk -F: '{print $1 * 60 + $2}' \
  )
  remain_time=$( echo `expr $total_time - $current_time` )
  remain_min=$( echo `expr $remain_time / 60` )
  remain_sec=$( echo `expr $remain_time % 60` )
  remain_sec=$( printf "%02d\n" ${remain_sec} )
  echo -$remain_min:$remain_sec
  
}

function icon(){
  echo ðŸŽ¹
}

DISPLAY=""

if [ "$(title)" = "" ]; then
  exit 1
fi

if [ "$OPTIND" = 1 ]; then
  while getopts :atpf: OPT
  do
    case $OPT in
      a)
        DISPLAY=$DISPLAY artist
        ;;
      t)
        DISPLAY=$DISPLAY title
        ;;
      p)
        DISPLAY=$DISPLAY position
        ;;
      f)
        DISPLAY=$( \
          echo ${OPTARG} \
          | sed -e "s/%artist/$(artist)/g" \
          | sed -e "s/%title/$(title)/g" \
          | sed -e "s/%icon/$(icon)/g" \
          | sed -e "s/%position/$(position)/g" \
          )
        ;;
      h)
        usage
        ;;
      *)
        usage
        ;;
    esac
  done
fi

echo $DISPLAY

