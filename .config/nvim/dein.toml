# basic# {{{
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/deoplete.nvim' # {{{
hook_source = '''
    let g:deoplete#enable_at_startup = 1
''' # }}}

[[plugin]]
repo = 'Shougo/neocomplete.vim' # {{{
hook_post_source = '''

    let g:neocomplete#enable_at_startup                 = 1         " use neocomplete.
    let g:neocomplete#enable_smart_case                 = 1         " use smartcase.
    let g:neocomplete#enable_camel_case                 = 1         " use camelcase.
    let g:neocomplete#enable_fuzzy_completion           = 1         " use fuzzy completion.
    let g:neocomplete#use_vimproc                       = 1
    let g:neocomplete#lock_iminsert                     = 1         "
    let g:neocomplete#sources#syntax#min_keyword_length = 2
    let g:neocomplete#lock_buffer_name_pattern          = '\*ku\*'  " file name to lock buffer

    " define dictionary.
    let g:neocomplete#sources#dictionary#dictionaries = {
        \ 'default' : '',
        \ 'vimshell' : $home.'/.vimshell_hist',
        \ 'scheme' : $home.'/.gosh_completions'
        \ }

    " define keyword.
    if !exists('g:neocomplete#keyword_patterns')
        let g:neocomplete#keyword_patterns = {}
    endif
    let g:neocomplete#keyword_patterns['default'] = '\h\w*'

    " enable omni completion.
    autocmd vimrc filetype css           setlocal omnifunc=csscomplete#completecss
    autocmd vimrc filetype html,markdown setlocal omnifunc=htmlcomplete#completetags
    autocmd vimrc filetype javascript    setlocal omnifunc=javascriptcomplete#completejs
    autocmd vimrc filetype python        setlocal omnifunc=pythoncomplete#complete
    autocmd vimrc filetype xml           setlocal omnifunc=xmlcomplete#completetags
    autocmd vimrc filetype cs            setlocal omnifunc=omnisharp#complete

    let g:neocomplete#force_overwrite_completefunc=1

    " enable heavy omni completion.
    if !exists('g:neocomplete#sources#omni#input_patterns')
        let g:neocomplete#sources#omni#input_patterns = {}
    endif
    let g:neocomplete#sources#omni#input_patterns.php = '[^. \t]->\h\w*\|\h\w*::'
    let g:neocomplete#sources#omni#input_patterns.c   = '[^.[:digit:] *\t]\%(\.\|->\)'
    let g:neocomplete#sources#omni#input_patterns.cpp = '[^.[:digit:] *\t]\%(\.\|->\)\|\h\w*::'
    let g:neocomplete#sources#omni#input_patterns.cs  = '.*[^=\);]'

    " plugin key-mappings.
    inoremap <expr><c-g>     neocomplete#undo_completion()
    inoremap <expr><c-l>     neocomplete#complete_common_string()

    " recommended key-mappings.
    " <cr>: close popup and save indent.
    inoremap <silent> <cr> <c-r>=<sid>my_cr_function()<cr>
    function! s:my_cr_function()
        return neocomplete#close_popup() . "\<cr>"
        " for no inserting <cr> key.
        "return pumvisible() ? neocomplete#close_popup() : "\<cr>"
    endfunction
    " <tab>: completion.
    inoremap <expr><tab>  pumvisible() ? "\<c-n>" : "\<tab>"
    " <c-h>, <bs>: close popup and delete backword char.
    inoremap <expr><c-h> neocomplete#smart_close_popup()."\<c-h>"
    inoremap <expr><bs> neocomplete#smart_close_popup()."\<c-h>"
    inoremap <expr><c-y>  neocomplete#close_popup()
    inoremap <expr><c-e>  neocomplete#cancel_popup()

    let g:neocomplete#sources#dictionary#dictionaries = {
        \   'ruby': $HOME . '/Dicts/dicts/ruby.dict',
        \ }

''' # }}}

[[plugins]]
repo = 'Shougo/vimproc.vim' # {{{
hook_post_update = '''
  if dein#util#_is_windows()
    let cmd = 'tools\\update-dll-mingw'
  elseif dein#util#_is_cygwin()
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
''' # }}}

[[plugins]]
repo = 'Shougo/neosnippet'# {{{
hook_add = '''

    " key_mappings {{{
    imap <C-k> <Plug>(neosnippet_expand_or_jump)
    smap <C-k> <Plug>(neosnippet_expand_or_jump)
    xmap <C-k> <Plug>(neosnippet_expand_target)
    "}}}
    
'''
# }}}

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/vimshell.vim'                

[[plugins]]
repo = 'kana/vim-smartchr'                  

[[plugins]]
repo = 'kana/vim-smartinput'                  

[[plugins]]
repo = 'itchyny/lightline.vim'              

[[plugins]]
repo = 'cohama/vim-hier'                    

[[plugins]]
repo = 'thinca/vim-quickrun'                

[[plugins]]
repo = 'thinca/vim-qfreplace'               

[[plugins]]
repo = 'thinca/vim-visualstar'              

[[plugins]]
repo = 'rhysd/clever-f.vim'                 

[[plugins]]
repo = 'tomtom/tcomment_vim'                

[[plugins]]
repo = 'junegunn/vim-easy-align'            

[[plugins]]
repo = 'tpope/vim-repeat'                   

[[plugins]]
repo = 'tpope/vim-fugitive'                 

[[plugins]]
repo = 'kien/rainbow_parentheses.vim'       

[[plugins]]
repo = 'LeafCage/yankround.vim'             

[[plugins]]
repo = 'thinca/vim-fontzoom'                

[[plugins]]
repo = 'AndrewRadev/switch.vim'             

[[plugins]]
repo = 't9md/vim-quickhl'                   

[[plugins]]
repo = 'airblade/vim-gitgutter'             

[[plugins]]
repo = 'supermomonga/shaberu.vim'           

[[plugins]]
repo = 'rking/ag.vim'                       

[[plugins]]
repo = 'AndrewRadev/splitjoin.vim'          

[[plugins]]
repo = 'mattn/unite-advent_calendar'        

[[plugins]]
repo = 'tyru/open-browser.vim'              

[[plugins]]
repo = 'osyo-manga/vim-anzu'              

[[plugins]]
repo = 'osyo-manga/vim-over'                

[[plugins]]
repo = 'mbbill/undotree'                    

[[plugins]]
repo = 'Shougo/vinarise.vim'                

[[plugins]]
repo = 'thinca/vim-submode'                 

# [[plugins]]
# repo = 'yuratomo/w3m.vim'

[[plugins]]
repo = 'thinca/vim-ref'                     

# [[plugins]]
# repo = 'ringogirl/unite-w3m'                

[[plugins]]
repo = 'osyo-manga/vim-sound'               

[[plugins]]
repo = 'rhysd/committia.vim'

[[plugins]]
repo = 'AndrewRadev/sideways.vim'

[[plugins]]
repo = 'dhruvasagar/vim-table-mode'

# [[plugins]]
# repo = 'thinca/vim-splash'

[[plugins]]
repo = 'deris/vim-gothrough-jk'

[[plugins]]
repo = 'plasticboy/vim-markdown'

[[plugins]]
repo = 'kannokanno/previm'

[[plugins]]
repo = 'LeafCage/foldCC.vim'

[[plugins]]
repo = 'tyru/restart.vim'

[[plugins]]
repo = 'mattn/googlesuggest-complete-vim'

[[plugins]]
repo = 'easymotion/vim-easymotion'

[[plugins]]
repo = 'terryma/vim-expand-region'

[[plugins]]
repo = 'moznion/hateblo.vim'

[[plugins]]
repo = 'haya14busa/incsearch.vim' 

[[plugins]]
repo = 'scrooloose/syntastic.git'

[[plugins]]
repo = 'miyakogi/livemark.vim'

[[plugins]]
repo = 'itchyny/dictionary.vim'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'terryma/vim-multiple-cursors'

# }}}

# Textobject# {{{
[[plugins]]
repo = 'kana/vim-textobj-user'             

[[plugins]]
repo = 'sgur/vim-textobj-parameter'        

[[plugins]]
repo = 'kana/vim-textobj-indent'           

[[plugins]]
repo = 'kana/vim-textobj-fold'             

[[plugins]]
repo = 'kana/vim-textobj-underscore'       

[[plugins]]
repo = 'osyo-manga/vim-textobj-multiblock' 
# }}}

# Operator# {{{
[[plugins]]
repo = 'kana/vim-operator-user'     

[[plugins]]
repo = 'rhysd/vim-operator-surround'

[[plugins]]
repo = 'tpope/vim-surround'         

[[plugins]]
repo = 'kana/vim-operator-replace'  
# }}}

# Unite# {{{
[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/unite-outline'

[[plugins]]
repo = 'ujihisa/unite-colorscheme'

[[plugins]]
repo = 'ujihisa/unite-font'

[[plugins]]
repo = 'ujihisa/unite-help'

[[plugins]]
repo = 'todashuta/unite-transparency'

[[plugins]]
repo = 'osyo-manga/unite-quickfix.git'

[[plugins]]
repo = 'LeafCage/unite-gvimrgb'

[[plugins]]
repo = 'LeafCage/unite-recording'
# }}}

# all languages# {{{

[[plugins]]
repo = 'mattn/sonictemplate-vim'

[[plugins]]
repo = 'tpope/vim-endwise'

# }}}

# Java# {{{

[[plugins]]
repo = 'vim-scripts/javacomplete'
on_ft = 'java'

[[plugins]]
repo = 'moznion/java_getset.vim'
on_ft = 'java'

# }}}

# ruby# {{{

[[plugins]]
repo = 'rhysd/unite-ruby-require.vim'
on_ft = 'ruby'

[[plugins]]
repo = 'rhysd/vim-textobj-ruby'
on_ft = 'ruby'

[[plugins]]
repo = 'marcus/rsense'
on_ft = 'ruby'

[[plugins]]
repo = 'osyo-manga/vim-monster'
on_ft = 'ruby'

# }}}

# Swift# {{{

[[plugins]]
repo = 'keith/swift.vim'
on_ft = 'swift'

# }}}

# C## {{{

# [[plugins]]
# repo = 'OmniSharp/omnisharp-vim'

[[plugins]]
repo = 'tpope/vim-dispatch'
on_ft = 'cpp'

[[plugins]]
repo = 'OrangeT/vim-csharp'
on_ft = 'cpp'

[[plugins]]
repo = 'osyo-manga/vim-stargate'
on_ft = 'cpp'

# }}}

# Go# {{{

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'

# }}}

# Vim script# {{{

# [[plugins]]
# repo = 'mopp/layoutplugin.vim'

# }}}

# Tex# {{{

[[plugins]]
repo = 'vim-latex/vim-latex'
on_ft = 'tex'

# }}}

# applescript# {{{

[[plugins]]
repo = 'vim-scripts/applescript.vim'
on_ft = 'applescript'

# }}}

# toml# {{{

[[plugins]]
repo = 'cespare/vim-toml'

# }}}

# colorscheme# {{{

[[plugins]]
repo = 'rhysd/try-colorscheme.vim'
if = '''0'''

[[plugins]]
repo = 'w0ng/vim-hybrid'
if = '''0'''

[[plugins]]
repo = 'nanotech/jellybeans.vim'
if = '''0'''

[[plugins]]
repo = 'altercation/vim-colors-solarized'
if = '''0'''

[[plugins]]
repo = 'morhetz/gruvbox'
if = '''0'''

[[plugins]]
repo = 'buttercream.vim'
if = '''0'''

[[plugins]]
repo = 'tomasr/molokai'
if = '''0'''

[[plugins]]
repo = 'vim-scripts/twilight'
if = '''0'''

[[plugins]]
repo = 'jonathanfilip/vim-lucius'
if = '''0'''

[[plugins]]
repo = 'jpo/vim-railscasts-theme'
if = '''0'''

[[plugins]]
repo = 'vim-scripts/Wombat'
if = '''0'''

[[plugins]]
repo = 'vim-scripts/rdark'
if = '''0'''

[[plugins]]
repo = 'vim-scripts/newspaper.vim'
if = '''0'''

[[plugins]]
repo = 'chriskempson/vim-tomorrow-theme'
if = '''0'''

[[plugins]]
repo = 'whatyouhide/vim-gotham'
if = '''0'''

[[plugins]]
repo = 'joshdick/onedark.vim'
hook_add = '''
  set background=dark
  au vimrc VimEnter * nested colorscheme onedark
'''

# }}}

# tools# {{{

[[plugins]]
repo = 'mattn/webapi-vim'

[[plugins]]
repo = 'ujihisa/neco-look'

[[plugins]]
repo = 'mitsuse/kompl'

# [[plugins]]
# repo = 'VimItunes.vim'

# }}}
